name: OpenWRT IPQ807x Kernel 6.12 Build

on:
  # 每次 push 到指定分支自动触发编译
  push:
    branches:
      - kernel-6.12
  workflow_dispatch:   # 手动触发

jobs:
  build:
    runs-on: ubuntu-22.04  # 使用 GitHub 托管的 Ubuntu 环境

    steps:
      # 1️⃣ 检出源码
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 2️⃣ 配置编译环境
      - name: Setup Build Environment
        run: |
          sudo apt update
          sudo apt install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses-dev libssl-dev python3 python3-pip python3-distutils \
            rsync unzip zlib1g-dev file wget curl cpio gcc-aarch64-linux-gnu g++-aarch64-linux-gnu quilt

      # 3️⃣ 更新 feeds 并安装包
      - name: Update Feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # 4️⃣ 应用内核补丁
      - name: Apply Kernel Patches
        run: |
          make target/linux/clean
          make target/linux/prepare V=s QUILT=1

          # 验证补丁是否成功应用
          cd build_dir/target-*/linux-ipq807x/linux-6.12
          echo "✅ Applied patches:"
          quilt applied || true
          echo "📄 All patches:"
          quilt series || true

      # 5️⃣ 配置 IPQ807x 平台编译目标
      - name: Configure Build
        run: |
          make defconfig
          make menuconfig  # 手动选择目标配置，可自动化配置

      # 6️⃣ 编译固件
      - name: Compile Firmware
        run: |
          make -j$(nproc) V=s

      # 7️⃣ 打包固件
      - name: Package Firmware
        run: |
          mkdir -p output
          cp -r bin/targets/ipq807x/generic/* output/
          cd output
          tar -czvf openwrt-ipq807x-firmware.tar.gz *

      # 8️⃣ 上传编译固件作为 Artifact
      - name: Upload Firmware
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-ipq807x-firmware
          path: output/openwrt-ipq807x-firmware.tar.gz
